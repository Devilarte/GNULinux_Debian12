# Arquivo de Configuração do Unbound

# Lista de Bloqueios
include: "/opt/unbound/blocklists/unbound.block.conf"

# Configurações do Servidor DNS Recursivo (Unbound)
server:
    # |Interface & Porta|
    interface: 127.0.0.1
    interface: ::1
    interface: 172.25.10.10
    interface-automatic: no
    port: 53
    # Especificar as interfaces para enviar consultas de saída para autoridade
    # Servidor de por ip-endereço. Se nenhum, a interface padrão (todos)
    # é usado. Especifique cada interface em uma linha 'outgoing-interface:'.
    outgoing-interface: 127.0.0.1
    outgoing-interface: ::1
    outgoing-interface: 172.25.10.10

    # Permitir vincular a endereços IP que não são locais ou não existem, 
    # como quando a interface de rede ou o endereço IP está inativo.
    ip-freebind: yes

    # |Protocolos|
    do-ip4: yes
    do-ip6: yes
    do-udp: yes
    do-tcp: yes
    # Defina como sim para preferir servidores upstream ipv6 em vez de ipv4
    prefer-ip6: no

    # |Root|
    # Executar a validação de DNSSEC usando o root.key.
    # O usuário unbound deve ter permissão de gravação para arquivo e diretório
    auto-trust-anchor-file: "/var/lib/unbound/root.key"
    # Arquivo de Servidores Raiz DNS.
    root-hints: "/var/lib/unbound/root.hints"

    # |Processos|
    # Não, para permitir o controle e o status adequados do serviço do systemd
    do-daemonize: no
    # Defina num-threads igual ao número de núcleos da CPU.
    num-threads: 2
    # UDP mais rápido com multithreading
    so-reuseport: yes

    # |Buffers|
    # Buffer de remontagem EDNS para anunciar aos pares UDP
    # O buffer real é definido com msg-buffer-size
    edns-buffer-size: 4096
    #### edns-buffer-size: 1232
    # Aumente o tamanho do buffer de consulta de entrada e saída para cobrir picos de tráfego
    so-rcvbuf: 8m
    so-sndbuf: 8m
    # 
    outgoing-range: 8192
    num-queries-per-thread: 4096
    #### num-queries-per-thread: 4096

    # |Cache|
    # Reduza a contenção de bloqueio por threads.
    # Definido para potência de 2, próximo a num-threads
    msg-cache-slabs: 4
    rrset-cache-slabs: 4
    infra-cache-slabs: 4
    key-cache-slabs: 4
    # rrset-cache-size deve ser o dobro do msg-cache-size
    msg-cache-size: 256m
    rrset-cache-size: 512m
    # TTL para mensagens em cache. Mais de uma hora pode facilmente causar problemas devido a dados desatualizados.
    # O padrão é 0
    cache-min-ttl: 0
    cache-max-ttl: 86400
    # Tamanho do número de bytes do cache negativo agressivo
    neg-cache-size: 4m
    # Execute a pré-busca de entrada de cache de mensagens quase expiradas
    prefetch: yes
    # Busque as DNSKEYs anteriormente no processo de validação, quando um registro DS for encontrado.
    # Isso reduz a latência das solicitações às custas de um pouco mais de uso da CPU.
    prefetch-key: yes
    # Faça com que unbound tente servir respostas antigas do cache com um TTL de 0 na resposta sem esperar
    # que a resolução real termine. A resposta real da resolução acaba no cache posteriormente.
    serve-expired: yes
    # Valor TTL a ser usado ao responder com dados expirados. Se o serve-expired-client-timeout for usado,
    # é recomendado usar 30. O padrão é 30 Adicionado para aviso de cachedb no início do unbound.
    # Unbound define como 0 para registros originados do cachedb
    serve-expired-reply-ttl: 0

    # |Políticas de Hardening (Endurecimento)|
    # Confiar, apenas se estiver dentro da autoridade do servidor
    harden-glue: yes
    # Ignore consultas muito grandes.
    harden-large-queries: yes
    # Exigir dados DNSSEC para zonas de confiança; se tais dados estiverem ausentes, a zona se tornará falsa.
    harden-dnssec-stripped: yes
    # Proteção contra downgrade de algoritmo quando vários algoritmos são anunciados no registro DS
    harden-algo-downgrade: yes
    # Ignore tamanhos de buffer EDNS muito pequenos nas consultas.
    harden-short-bufsize: yes

    # |Registro de Logs|
    # Verbosity: O padrão é 1
    # 0 Sem verbosidade, apenas erros
    # 1 Informações operacionais
    # 2 Informações operacionais detalhadas
    # 3 Informações em nível de consulta, saída por consulta
    # 4 Informações em nível de algoritmo
    # 5 Identificação do cliente para falhas de cache
    verbosity: 0
    # Imprime uma linha por consulta no log
    log-queries: no
    # Imprime uma linha por resposta ao log
    log-replies: yes
    # Imprima linhas de log que informam por que as consultas retornam SERVFAIL aos clientes
    log-servfail: no
    # Imprima linhas de registro para informar sobre ações da zona local. Mostra domínios bloqueados
    log-local-actions: yes
    # Imprime a palavra 'consulta' e 'resposta' com consultas de log e respostas de log.
    # Isso facilita a filtragem de logs.
    log-tag-queryreply: yes
    # Se esta opção for fornecida, a opção use-syslog is será definida como "no"
    logfile: "/var/log/unbound/unbound.log"
    # Ativado, para as estatísticas estendidas serem impressas em unbound-control.
    extended-statistics: yes

    # |Privacidade|
    # Negar consultas do tipo ANY com uma resposta vazia
    deny-any: yes
    # Defina o número total de respostas indesejadas para acompanhar em cada tópico.
    # Se atingir o limite, um aviso será impresso e uma ação defensiva será tomada,
    # o cache será limpo para eliminar qualquer veneno.
    # O valor sugerido é 10000000, o padrão é 0 (desligado)
    # unwanted-reply-threshold: 100000
    unwanted-reply-threshold: 10000
    # Rotaciona a ordem do RRSet em resposta (o número pseudo-aleatório é retirado do ID da consulta, para velocidade e segurança do thread)
    rrset-roundrobin: yes
    # Envie uma quantidade mínima de informações para servidores upstream para aumentar a privacidade
    qname-minimisation: yes
    # Não insira seções de autoridade/adicionais nas mensagens de resposta quando essas seções não forem necessárias.
    # Isso reduz significativamente o tamanho da resposta e pode evitar o fallback de TCP para algumas respostas.
    # Pode acelerar um pouco.
    minimal-responses: yes
    # Recusar consultas id.server e hostname.bind
    hide-identity: yes
    # Relate esta identidade em vez do nome do host do servidor.
    identity: "DNS"
    # Recusar consultas version.server e version.bind
    hide-version: yes
    # Controle quais clientes têm permissão para fazer consultas (recursivas) a este servidor. Por padrão, tudo é recusado, exceto localhost
    access-control: 0.0.0.0/0 deny
    #access-control: ::/0 deny
    access-control: 127.0.0.0/8 allow
    access-control: 10.0.0.0/8 allow
    access-control: 100.64.0.0/10 allow
    access-control: 172.16.0.0/12 allow
    access-control: 172.25.10.0/24 allow
    ########## RANGE TEMPORÁRIA ##########
    access-control: 172.100.10.0/24 allow
    ######################################
    access-control: 192.168.0.0/16 allow
    access-control: 200.200.0.0/16 allow
    access-control: 45.179.5.140/30 allow
    access-control: 177.46.32.72/30 allow
    # Imponha a privacidade desses endereços.
    # Afasta-os das respostas.
    # Isso pode fazer com que a validação do DNSSEC o marque adicionalmente como falso.
    # Protege contra DNS Rebinding
    ## Localhost
    private-address: 127.0.0.0/8
    private-address: fd00::/8
    private-address: fe80::/10
    ## RFC 6598
    private-address: 100.64.0.0/10
    ## RFC 1918
    private-address: 10.0.0.0/8
    private-address: 172.16.0.0/12
    private-address: 192.168.0.0/16
    ## RFC 3927
    private-address: 169.254.0.0/16
    ## Rede Local Provedor
    private-address: 172.25.10.0/24
    private-address: 172.100.10.0/24
    private-address: 200.200.0.0/16
    # |Bloqueios|
    # Define tags that can be used with local-zone and access-control
    #define-tag: "school"
    # Atribua tags aos elementos de controle de acesso. IPs que usam este elemento de controle de acesso usam zonas locais marcadas com uma dessas tags
    #access-control-tag: 10.1.1.30 "school"
    #access-control-tag: 10.1.1.32 "school"
    # Configurar zona local para bloco filtrado
    #local-zone: "youtube.com" always_null
    #local-zone: "m.youtube.com" always_null
    # Atribua tags às zonas locais. Zonas locais marcadas somente serão aplicadas quando o elemento de controle de acesso usado tiver uma tag correspondente
    #local-zone-tag: youtube.com school
    #local-zone-tag: m.youtube.com school

    # |Módulos|
    # Lista de Módulos separados por espaços.
    # A ordem dos módulos decide a ordem de processamento.
    # O padrão é "validator cachedb iterator".
    # Adicionado cachedb, antes do iterator.
    module-config: "respip validator cachedb iterator"

# Configurações do RPZ
rpz:
    # Nome da Zona de Autoridade RPZ
    name: rpz.block.hosts.local.zone
    # Arquivo da Lista de Bloqueios do RPZ
    zonefile: "/etc/unbound/rpz.block.hosts.local.zone"
    # Sempre use esta ação RPZ para combinar gatilhos desta zona.
    # Ações: nxdomain, nodata, passthru, drop, disabled e cname.
    rpz-action-override: nxdomain

rpz:
    # Nome da Zona de Autoridade RPZ
    name: rpz.block.hosts.anatel.zone
    # Arquivo da Lista de Bloqueios do RPZ
    zonefile: "/etc/unbound/rpz.block.hosts.anatel.zone"
    # Sempre use esta ação RPZ para combinar gatilhos desta zona.
    # Ações: nxdomain, nodata, passthru, drop, disabled e cname.
    rpz-action-override: nxdomain

# Cache DB Module Options
cachedb:
    # |Redis|
    # Nome do DB de back-end. O DB padrão é um back-end na memória denominado "testframe".
    # Usar redis
    backend: redis
    # Semente para calcular o valor hash a partir das informações da consulta.
    # O padrão é "default"
    #secret-seed: "unbound-config"
    # O caminho do soquete unix para conectar-se ao servidor redis.
    # Os soquetes Unix podem ter melhor rendimento do que a opção de endereço IP.
    redis-server-path: "/var/run/redis/redis.sock"
    # Endereço IP do Servidor Redis.
    # redis-server-host: 127.0.0.1
    # Número da Porta TCP do Servidor Redis.
    # redis-server-port: 6379
    # Período até que unbound aguarde a resposta do servidor redis. O padrão é 100ms
    redis-timeout: 100
    # Expiração do registro Redis.
    # Yes, o unbound define o tempo limite para registros que o redis possa despejar chaves expiradas automaticamente.
    # Se unbound estiver configurado com serve-expired, esta opção será revertida internamente para não.
    # O padrão é No
    redis-expire-records: no

# Opções de Controle Remoto
remote-control:
    # Se habilitado, unbound-control pode ser usado.
    control-enable: yes
    control-interface: "/var/run/unbound.sock"
    control-use-cert: no
